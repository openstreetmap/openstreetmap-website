//= require leaflet
//= require leaflet.osm

window.onload = function () {
  var query = (window.location.search || '?').substr(1),
      args  = {};

  var pairs = query.split('&');
  for (var i = 0; i < pairs.length; i++) {
    var parts = pairs[i].split('=');
    args[parts[0]] = decodeURIComponent(parts[1] || '');
  }

  var map = L.map("map");
  map.attributionControl.setPrefix('');
  map.removeControl(map.attributionControl);

  if (!args.layer || args.layer === "mapnik" || args.layer === "osmarender") {
    new L.OSM.Mapnik().addTo(map);
  } else if (args.layer === "cyclemap" || args.layer === "cycle map") {
    new L.OSM.CycleMap().addTo(map);
  } else if (args.layer === "transportmap") {
    new L.OSM.TransportMap().addTo(map);
  } else if (args.layer === "mapquest") {
    new L.OSM.MapQuestOpen().addTo(map);
  } else if (args.layer === "hot") {
    new L.OSM.HOT().addTo(map);
  }

  if (args.marker) {
    L.marker(args.marker.split(','), {icon: L.icon({
      iconUrl: <%= asset_path('images/marker-icon.png').to_json %>,
      iconSize: new L.Point(25, 41),
      iconAnchor: new L.Point(12, 41),
      shadowUrl: <%= asset_path('images/marker-shadow.png').to_json %>,
      shadowSize: new L.Point(41, 41)
    })}).addTo(map);
  }

  if (args.bbox) {
    var bbox = args.bbox.split(',');
    map.fitBounds([L.latLng(bbox[1], bbox[0]),
                   L.latLng(bbox[3], bbox[2])]);
  } else {
    map.fitWorld();
  }
  (new L.Control.OSMReportAProblem({})).addTo(map);
};

L.Control.OSMReportAProblem = L.Control.Attribution.extend({
        options: {
                position: 'bottomright',
                prefix: '<a href="http://www.openstreetmap.org/fixthemap?lat={x}&lon={y}&zoom={z}">Report a problem</a>'
        },
        _layerAdd: function(e)
        {
		if (e.layer.getAttribution) {
                        this.addAttribution(e.layer.getAttribution());
		}
        },
        _layerRemove: function(e)
        {
		if (e.layer.getAttribution) {
                        this.removeAttribution(e.layer.getAttribution());
                }
        },
        onAdd: function (map) {
                this._container = L.DomUtil.create('div', 'leaflet-control-attribution');
                L.DomEvent.disableClickPropagation(this._container);

                // TODO ugly, refactor
                for (var i in map._layers) {
                        if (map._layers[i].getAttribution) {
                                this.addAttribution(map._layers[i].getAttribution());
                        }
                }

                this._update();
                map.on('moveend', this._update, this);
                map.on('layeradd', this._layerAdd, this);
                map.on('layerremove', this._layerRemove, this);

                return this._container;
        },
        _update: function () {
                if (!this._map) { return; }

                var attribs = [];

                for (var i in this._attributions) {
                        if (this._attributions[i]) {
                                attribs.push(i);
                        }
                }

                var prefixAndAttribs = [];

                if (this.options.prefix) {
                        prefixAndAttribs.push(this.options.prefix);
                }
                if (attribs.length) {
                        prefixAndAttribs.push(attribs.join(', '));
                }

                this._container.innerHTML = prefixAndAttribs.join(' | ').replace('{x}', this._map.getCenter().lat).replace('{y}', this._map.getCenter().lng).replace('{z}', this._map.getZoom());
        }

    });
